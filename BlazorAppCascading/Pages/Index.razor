@page "/"
@using DbModels;
@inject DemoDbContext dbContext;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

@if(employee!=null)
{
    <div class="row">
        <div class="col-md-2">
            <label>Name</label>
            <input @bind="employee.Name" class="form-control"/>
        </div>
        <div class="col-md-2">
            <label>Mobile</label>
            <input @bind="employee.MobileNumber" class="form-control" />
        </div>
        <div class="col-md-2">
            <label>Country</label>
            <select id="ddlCountry" class="form-control" value="@employee.CountryId" @onchange="@((ChangeEventArgs e)=>{
                employee.CountryId=Convert.ToInt32(e.Value);
                OnDropDownChange(employee,"Country");
                })">
            @foreach(var item in masterCountry)
            {
                <option value="@item.Id">@item.Name</option>
            }
            </select>
        </div>
        <div class="col-md-2">
            <label>State</label>
            <select id="ddlState" class="form-control" value="@employee.StateId" @onchange="@((ChangeEventArgs e)=>{
                employee.StateId=Convert.ToInt32(e.Value);
                OnDropDownChange(employee,"State");
                })">
                @foreach (var item in masterState.Where(x => x.CountryId == employee.CountryId || x.CountryId == 0).ToList())
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <label>City</label>
            <select id="ddlCountry" class="form-control" value="@employee.CityId" @onchange="@((ChangeEventArgs e)=>{
                employee.CityId=Convert.ToInt32(e.Value);
               
                })">
                @foreach (var item in masterCity.Where(x => x.StateId == employee.StateId||x.StateId == 0).ToList())
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
        </div>
        <div class="col-md-2">
        
        </div>

    </div>   

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Mobile</th>
                <th>Country</th>
                <th>State</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
                @foreach (var (index, emp) in employeeList.Select((emp, i)=>(i+1,emp)))
                {
                    <tr>
                        <td>
                            <input @bind="emp.Name" class="form-control"></input>
                        </td>

                    </tr>
                
            }

        </tbody>
    </table>
}

@code{
    private List<EmployeeInfo> employeeList = new List<EmployeeInfo > ();
    private EmployeeInfo employee = new EmployeeInfo();

    public List<Country> masterCountry = new List<Country>();
    public List<State> masterState = new List<State>();
    public List<City> masterCity = new List<City>();

    public string message = string.Empty;

    protected override void OnInitialized()
    {
        employee.CountryId = 0;
        employee.StateId = 0;
        employee.CityId = 0;
        GetMasterData();
        base.OnInitialized();
    }

    public void GetMasterData()
    {
        masterCountry = dbContext.Countries.ToList();
        masterState = dbContext.States.ToList();
        masterCity = dbContext.Cities.ToList();


        masterCountry.Insert(0, new Country { Id = 0, Name = "-SelectCountry-" });
        masterState.Insert(0, new State { Id = 0, Name = "-SelectState-", CountryId = 0 });
        masterCity.Insert(0, new City { Id = 0, Name = "-SelectCity-", StateId = 0 });

        GetEmployees();
    }

    public void OnDropDownChange(EmployeeInfo model, string type)
    {
        if(type == "Country")
        {
            model.StateId = 0;
            model.CityId = 0;
        }

        if(type == "State")
        {
            model.CityId = 0;
        }

    }

    private void AddnewRecord()
    {
        dbContext.EmployeeInfos.Add(employee);
        dbContext.SaveChanges();

        employee.Name = string.Empty;
        employee.MobileNumber = string.Empty;
        employee.CountryId = 0;
        employee.StateId = 0;
        employee.CityId = 0;

        GetEmployees();
    }

    private void GetEmployees()
    {
        employeeList = new List<EmployeeInfo>();
        employeeList = dbContext.EmployeeInfos.ToList();
    }

}
